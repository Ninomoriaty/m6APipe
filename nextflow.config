/*
 * -------------------------------------------------
 *  nfcore/m6APipe Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

// Global default params, used in configs
params {
  container = 'nfcore/m6APipe:1.0' // Container slug. Stable releases should specify release tag!

  // Pipeline Options
  help = false
  genome = false
  unstranded = false
  splicesites = false
  outdir = "$baseDir/results"
  saveReference = true
  saveTrimmed = false
  saveAlignedIntermediates = false
  singleEnd = true
  inputformat = "fastq"
  designfile = "designfile_test_human.txt"
  fasta = "$baseDir/Genome/hg38/hg38_genome.fa"
  gtf = "$baseDir/Genome/hg38/hg38_genes.gtf"
  snp = "$baseDir/Genome/hg38/snp151Common.txt"
  bed12 = false
  
  //mode Options
  skip_aligners = false
  skip_expression = false
  skip_peakCalling = false
  skip_diffpeakCalling = false
  skip_mspc = false

  tophat2_index = "$baseDir/Genome/Tophat2Index/*"
  hisat2_index = "$baseDir/Genome/Hisat2Index/*"
  bwa_index = "$baseDir/Genome/BWAIndex/*"
  star_index = "/data1/wqj/database/reference/starindex/"
  
  // Custom trimming options
  clip_r1 = 0
  clip_r2 = 0
  three_prime_clip_r1 = 0
  three_prime_clip_r2 = 0

  // skipping tools Options
  skip_qc = false
  skip_fastqc = false
  skip_rseqc = false
  skip_genebody_coverage = false
  skip_edger = false
  skip_tophat2 = false
  skip_hisat2 = false
  skip_bwa = false
  skip_star = false
  skip_cufflinks = false
  skip_exomepeak = false
  skip_metpeak = false
  skip_macs2 = false
  skip_diffexomepeak = false
  skip_metdiff = false
  skip_QNB = false
  skip_matk = false

  // AWS Batch
  awsqueue = false
  awsregion = 'eu-west-1'

  // Defaults
  sampleLevel = false
  clusterOptions = false
  hisatBuildMemory = 200 // Required amount of memory in GB to build HISAT2 index with splice sites
  subsampFilesizeThreshold = 10000000000 // Don't subsample BAMs for RSeQC gene_body_coverage if less than this
  maxMultiqcEmailFileSize = 25.MB
  readPaths = "$baseDir/data"
  tracedir = "${params.outdir}/pipeline_info/"
}

profiles {

  standard {
    includeConfig 'conf/base.config'
    includeConfig 'conf/igenomes.config'
  }
  conda { process.conda = "$baseDir/environment.yml" }
  docker { docker.enabled = true }
  singularity { singularity.enabled = true }
  uppmax {
    includeConfig 'conf/base.config'
    includeConfig 'conf/uppmax.config'
    includeConfig 'conf/igenomes.config'
  }
  uppmax_devel {
    includeConfig 'conf/base.config'
    includeConfig 'conf/uppmax.config'
    includeConfig 'conf/uppmax-devel.config'
    includeConfig 'conf/igenomes.config'
  }
  hebbe {
    includeConfig 'conf/base.config'
    includeConfig 'conf/hebbe.config'
  }
  uct_hex {
    includeConfig 'conf/base.config'
    includeConfig 'conf/uct_hex.config'
    includeConfig 'conf/igenomes.config'
  }
  awsbatch {
    includeConfig 'conf/base.config'
    includeConfig 'conf/awsbatch.config'
    includeConfig 'conf/igenomes.config'
  }
  binac {
    includeConfig 'conf/base.config'
    includeConfig 'conf/binac.config'
  }
  cfc {
    includeConfig 'conf/base.config'
    includeConfig 'conf/cfc.config'
  }
  ccga {
    includeConfig 'conf/base.config'
    includeConfig 'conf/ccga.config'
    includeConfig 'conf/igenomes.config'
  }
  gis {
    includeConfig 'conf/base.config'
    includeConfig 'conf/gis.config'
    includeConfig 'conf/igenomes.config'
  }
  test {
    includeConfig 'conf/base.config'
    includeConfig 'conf/test.config'
    includeConfig 'conf/igenomes.config'
  }
  none {
    // Don't load any config (for use with custom home configs)
  }

}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/nfcore-m6APipe_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/nfcore-m6APipe_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/nfcore-m6APipe_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/nfcore-m6APipe_DAG.svg"
}

manifest {
  name = 'm6APipe'
  description = 'Nextflow MeRIP-seq analysis pipeline.'
  homePage = 'https://github.com/kingzhuky/m6APipe'
  version = '1.0'
  mainScript = 'main.nf'
  nextflowVersion = '>=0.32.0'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
